% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_top_term_matrix.R
\name{make_top_term_matrix}
\alias{make_top_term_matrix}
\title{Create a top terms per topic (or document) matrix from a numeric term per topic (or document) distribution}
\usage{
make_top_term_matrix(beta, n = 10, terms = NULL)
}
\arguments{
\item{beta}{A numeric matrix object (incl. base::matrix, Matrix::sparse, slam::simple_triplet_matrix).}

\item{n}{Number of top n terms per row to take into account. By default 10.}
}
\value{
A character matrix with the top n terms per row.
        The output is "transposed" so that the row elements appear as columns.
}
\description{
The function orders the elements of a matrix per row and returns the actual top n corresponding column items per row.
It achieves the same as, e.g., topicmodels::terms or text2vec or text2vec::get_top_words
but takes a raw matrix as input instead of a native model object of a specific package.
Hence, apart from getting top n words per topic from a "raw" word probabilities per topic object of an LDA model (words as columns,
topics as rows, entries are word probabilities) but might also help to find top n words per document given a document term matrix.
}
\examples{

beta <- rbind(T1 = c(0.5,0.3,0.19, 0.01), T2 = c(0.19,0.3,0.5, 0.01),  T3 = c(0.3,0.5,0.19, 0.01))
make_top_term_matrix(beta, 2, terms = c("A", "B", "C", "D"))
#      T1  T2  T3
# [1,] "A" "C" "B"
# [2,] "B" "B" "A"
}
